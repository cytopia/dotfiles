############################################################
# Backend
############################################################

# Fix current bug on XFT font lag
# https://wiki.archlinux.org/index.php/Compton#Lag_when_using_xft_fonts
# https://github.com/chjj/compton/issues/152
#xrender-sync = true;
#xrender-sync-fence = true;

# Backend to use: "xrender" or "glx".
# GLX backend is typically much faster but depends on a sane driver.
backend = "glx";
#backend = "xrender";

###
### TODO: bnchmark with agar.io CPU usage
###

############################################################
# Vsync
############################################################

# vsync guide
# https://github.com/chjj/compton/wiki/vsync-guide
# opengl-swc or opengl-mswc
#vsync = "opengl-swc";
#vsync = "drm";


############################################################
# GLX backend
############################################################

# May have either positive or negative effect on performance.
# Most compositors paints on the overlay windows nowadays, though.
#paint-on-overlay = true;

# Usually increases performance quite significantly (around 15%).
# Its only problem I currently know is a theoretical risk of repainting
# a single area for multiple times. I have never seen this happening, however.
#glx-no-stencil = true;



# has an effect very similar with --glx-use-copysubbuffermesa,
# so they shouldn’t be enabled together.
# There are 3 possible values, undefined, exchange, and copy.
# 'copy' is the fastest, but it doesn’t work with most drivers
# (in particular, it won’t work with "Allow Flipping" on in your driver configuration).
# 'exchange' is slightly slower, but works if the driver is indeed using
# exchange buffer swap with 2 buffers only.
# 'undefined' is the slowest one, and the default value.
#glx-swap-method = "undefined";

# is similar in effect with --glx-use-copysubbuffermesa and --glx-swap-method,
# so only one of the three should be used.
# It generally performs much worse than
# --glx-use-copysubbuffermesa and --glx-swap-method.
#glx-copy-from-front = true;

# should work on most drivers (except LLVMpipe),
# and is useful if you have a window with content rapidly changing.
#glx-no-rebind-pixmap = true;



## Soften the window and workspace changes
#fading = true;
#fade-in-step = 0.1;
#fade-out-step = 0.1;

# shadow ransparency
#shadow-opacity = 0.5;
#shadow-red = 0.0;
#shadow-green = 0.0;
#shadow-blue = 0.0;


## transparent borders are pretty okay
#frame-opacity = 0.5;

## Keep the shadows tight
#shadow = true;
#shadow-radius = 4;
#shadow-offset-x = -2;
#shadow-offset-y = -2;
#no-dock-shadow = true;
#no-dnd-shadow = true;
#shadow-exclude = [
#	"name = 'noshadow'",
#	"class_g = 'lemonbar'"
#];



## Extras
#use-ewmh-active-win = false;
detect-client-opacity = true;
#sw-opti = true;
detect-transient = true;
detect-client-leader = true;
#shadow-ignore-shaped = true;
#detect-rounded-corners = true;
